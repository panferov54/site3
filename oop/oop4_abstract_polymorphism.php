<?php

//abstarct - ключевое слово,объекты этого класса не могут быть созданны
//любой класс, который содержит хотябы один абсрактный метод должен быть абстрактным
//методы , объявленный как абстрактные не могут включать реализацию
abstract class Point{

    public $x;
    public $y;

    function __construct($x1,$y1)
    {
        $this->x=$x1;
        $this->y=$y1;
    }

    function Show(){
        echo "<br>Vertex:($this->x,$this->y)";
    }
abstract function Area();
    abstract function Perimetr();
}

class Rectangle extends Point {
    public $width;
    public $height;
    function __construct($x1, $y1,$w,$h)
    {
        parent::__construct($x1, $y1);
        $this->width=$w;
        $this->height=$h;
    }
//переопределение функции
    function Show()
    {
        parent::Show(); // TODO: Change the autogenerated stub
        echo "<br>Width:$this->width,Height: $this->height";
    }

    function Area(){
        return $this->width*$this->height;
    }

    function Perimetr(){
       return ($this->width+$this->height )*2;
    }
}


class Circle extends Point{
    public $radius;
    function __construct($x1, $y1,$r)
    {
        parent::__construct($x1, $y1);
        $this->radius=$r;
    }
    function Show()
    {
        parent::Show();
        echo "radius: $this->radius";
    }

    function Area(){
        return M_PI*pow($this->radius,2);
    }

    function Perimetr(){
        return 2*M_PI*$this->radius;
    }


}
$figures=[];
//наполнение массива экземплярами классов
$figures[]=new Rectangle(100,100,200,150);
$figures[]=new Circle(200,100,200);
$figures[]=new Rectangle(200,111,333,444);
//$figures[]=new Point(14,15);
$figures[]=new Circle(300,300,500);

$total_area=0;
$total_perimetr=0;


//реализуем полиморфизм
//полиморфизм в РНР - позволяет нам использовать вместо экземпляров родительского класс, экземпляры дочерних классов. Гарантирует, что все методы классов будут вести себя корректно
foreach ($figures as $figure){
    if($figure instanceof Point) {//проверяем что экземпляры классы пренадлежат родительскому
        $total_area += $figure->Area();
        $total_perimetr += $figure->Perimetr();
    }
}
echo "Total area: ".round($total_area)."<br>Total perimetr: ".round($total_perimetr);